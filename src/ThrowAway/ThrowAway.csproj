<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net6.0;net7.0;net8.0</TargetFrameworks>
		<LangVersion>12.0</LangVersion>
		<Nullable>enable</Nullable>
		<Authors>Sebastian Öberg</Authors>
		<Copyright>Sebastian Öberg</Copyright>
		<PackageProjectUrl>https://github.com/bazer/ThrowAway</PackageProjectUrl>
		<RepositoryUrl>https://github.com/bazer/ThrowAway</RepositoryUrl>
		<Description>
			ThrowAway is a C# library designed to elegantly handle the dichotomy between successful outcomes (Values) and error states (Failures) in method returns.
			The library leverages the functional concept of Option, enabling the return of an Option from a method that can either be matched, mapped, filtered, transposed, etc. or implicitly type cast to the underlying Value.

			* Dual Outcomes: Facilitates methods to return either a Value or a Failure, encapsulated in Option types.
			* Seamless Type Casting: Implicit type casting of Option with a value to its underlying type; throws an exception if it's a Failure, which can be caught and handled elsewhere.
			* No Nulls Allowed: Options are struct-based, ensuring an instance can never be null. Disallows nulls for both Value and Failure, enhancing type safety and predictability.
		</Description>
		<IncludeSymbols>true</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<Deterministic>true</Deterministic>
		<Configuration>Release</Configuration>
		<PackageLicenseFile>LICENSE</PackageLicenseFile>
		<PackageOutputPath>./../../nupkg</PackageOutputPath>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
		<PackageReference Include="MinVer" Version="4.3.0" PrivateAssets="All" />
	</ItemGroup>

	<ItemGroup>
		<None Include="..\..\LICENSE">
			<Pack>True</Pack>
			<PackagePath></PackagePath>
		</None>
	</ItemGroup>

</Project>
